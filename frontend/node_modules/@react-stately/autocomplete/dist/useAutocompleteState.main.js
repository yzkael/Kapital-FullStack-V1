var $lcwab$react = require("react");
var $lcwab$reactstatelyutils = require("@react-stately/utils");


function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}

$parcel$export(module.exports, "UNSTABLE_useAutocompleteState", () => $af5197e4b74cd279$export$130b939e942a109d);
/*
 * Copyright 2024 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */ 

function $af5197e4b74cd279$export$130b939e942a109d(props) {
    let { onInputChange: propsOnInputChange, inputValue: propsInputValue, defaultInputValue: propsDefaultInputValue = '' } = props;
    let onInputChange = (value)=>{
        if (propsOnInputChange) propsOnInputChange(value);
    };
    let [focusedNodeId, setFocusedNodeId] = (0, $lcwab$react.useState)(null);
    let [inputValue, setInputValue] = (0, $lcwab$reactstatelyutils.useControlledState)(propsInputValue, propsDefaultInputValue, onInputChange);
    return {
        inputValue: inputValue,
        setInputValue: setInputValue,
        focusedNodeId: focusedNodeId,
        setFocusedNodeId: setFocusedNodeId
    };
}


//# sourceMappingURL=useAutocompleteState.main.js.map
