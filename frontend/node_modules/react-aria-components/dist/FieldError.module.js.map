{"mappings":";;;;;AAAA;;;;;;;;;;CAUC;;;;AAQM,MAAM,0DAAoB,CAAA,GAAA,oBAAY,EAA2B;AAQjE,MAAM,0DAAa,CAAA,GAAA,iBAAS,EAAE,SAAS,WAAW,KAAsB,EAAE,GAA8B;IAC7G,IAAI,aAAa,CAAA,GAAA,iBAAS,EAAE;IAC5B,IAAI,EAAC,uBAAA,iCAAA,WAAY,SAAS,GACxB,OAAO;IAGT,qBAAO,gCAAC;QAAiB,GAAG,KAAK;QAAE,KAAK;;AAC1C;AAEA,MAAM,sDAAkB,CAAA,GAAA,iBAAS,EAAE,CAAC,OAAwB;IAC1D,IAAI,aAAa,CAAA,GAAA,iBAAS,EAAE;IAC5B,IAAI,WAAW,CAAA,GAAA,qBAAa,EAAE;IAC9B,IAAI,cAAc,CAAA,GAAA,uCAAa,EAAE;QAC/B,GAAG,KAAK;QACR,kBAAkB;QAClB,iBAAiB,WAAW,gBAAgB,CAAC,MAAM,KAAK,IAAI,YAAY,WAAW,gBAAgB,CAAC,IAAI,CAAC;QACzG,QAAQ;IACV;IAEA,IAAI,YAAY,QAAQ,IAAI,MAC1B,OAAO;IAGT,qBAAO,gCAAC,CAAA,GAAA,yCAAG;QAAE,MAAK;QAAgB,GAAG,QAAQ;QAAG,GAAG,WAAW;QAAE,KAAK;;AACvE","sources":["packages/react-aria-components/src/FieldError.tsx"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMProps, ValidationResult} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {createContext, ForwardedRef, forwardRef, useContext} from 'react';\nimport {RenderProps, useRenderProps} from './utils';\nimport {Text} from './Text';\n\nexport const FieldErrorContext = createContext<ValidationResult | null>(null);\n\nexport interface FieldErrorRenderProps extends ValidationResult {}\nexport interface FieldErrorProps extends RenderProps<FieldErrorRenderProps>, DOMProps {}\n\n/**\n * A FieldError displays validation errors for a form field.\n */\nexport const FieldError = forwardRef(function FieldError(props: FieldErrorProps, ref: ForwardedRef<HTMLElement>) {\n  let validation = useContext(FieldErrorContext);\n  if (!validation?.isInvalid) {\n    return null;\n  }\n\n  return <FieldErrorInner {...props} ref={ref} />;\n});\n\nconst FieldErrorInner = forwardRef((props: FieldErrorProps, ref: ForwardedRef<HTMLElement>) => {\n  let validation = useContext(FieldErrorContext)!;\n  let domProps = filterDOMProps(props)!;\n  let renderProps = useRenderProps({\n    ...props,\n    defaultClassName: 'react-aria-FieldError',\n    defaultChildren: validation.validationErrors.length === 0 ? undefined : validation.validationErrors.join(' '),\n    values: validation\n  });\n\n  if (renderProps.children == null) {\n    return null;\n  }\n\n  return <Text slot=\"errorMessage\" {...domProps} {...renderProps} ref={ref} />;\n});\n"],"names":[],"version":3,"file":"FieldError.module.js.map"}